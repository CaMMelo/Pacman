import pygame
import globals

from config import TILE_SIZE, SCREEN_SIZE

class Grid:

    def __init__(self):

        self.walls = globals.WALL_SPRITES
        self.pellets = globals.PELLET_SPRITES

        self.grid = [
            [000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000], # 0
            [000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000], # 1
            [000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000], # 2

            [  1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,  3,  1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,  3], # 3
            [  9, 82, 26, 26, 26, 26, 90, 26, 26, 26, 26, 26, 74,  9,  9, 82, 26, 26, 26, 26, 26, 90, 26, 26, 26, 26, 74,  9], # 4
            [  9, 98,  1, 11, 11,  3, 98,  1, 11, 11, 11,  3, 98,  9,  9, 98,  1, 11, 11, 11,  3, 98,  1, 11, 11,  3, 98,  9], # 5
            [  9,102,  9,000,000,  9, 98,  9,000,000,000,  9, 98,  9,  9, 98,  9,000,000,000,  9, 98,  9,000,000,  9,102,  9], # 6
            [  9, 98,  7, 11, 11,  5, 98,  7, 11, 11, 11,  5, 98,  7,  5, 98,  7, 11, 11, 11,  5, 98,  7, 11, 11,  5, 98,  9], # 7
            [  9,114, 26, 26, 26, 26,122, 26, 26, 90, 26, 26, 58, 26, 26, 58, 26, 26, 90, 26, 26,122, 26, 26, 26, 26,106,  9], # 8
            [  9, 98,  1, 11, 11,  3, 98,  1,  3, 98,  1, 11, 11, 11, 11, 11, 11,  3, 98,  1,  3, 98,  1, 11, 11,  3, 98,  9], # 9
            [  9, 98,  7, 11, 11,  5, 98,  9,  9, 98,  7, 11, 11,  3,  1, 11, 11,  5, 98,  9,  9, 98,  7, 11, 11,  5, 98,  9], # 10
            [  9, 50, 26, 26, 26, 26,106,  9,  9, 50, 26, 26, 74,  9,  9, 82, 26, 26, 42,  9,  9,114, 26, 26, 26, 26, 42,  9], # 11
            [  7, 11, 11, 11, 11,  3, 98,  9,  7, 11, 11,  3, 96,  9,  9, 96,  1, 11, 11,  5,  9, 98,  1, 11, 11, 11, 11,  5], # 12
            [000,000,000,000,000,  9, 98,  9,  1, 11, 11,  5, 96,  7,  5, 96,  7, 11, 11,  3,  9, 98,  9,000,000,000,000,000], # 13
            [000,000,000,000,000,  9, 98,  9,  9, 80, 24, 24, 56, 24, 24, 56, 24, 24, 72,  9,  9, 98,  9,000,000,000,000,000], # 14
            [000,000,000,000,000,  9, 98,  9,  9, 96,  1, 11, 11, 13, 13, 11, 11,  3, 96,  9,  9, 98,  9,000,000,000,000,000], # 15
            [ 11, 11, 11, 11, 11,  5, 98,  7,  5, 96,  9,000,000,000,000,000,000,  9, 96,  7,  5, 98,  7, 11, 11, 11, 11, 11], # 16
            [ 24, 24, 24, 24, 24, 24,122, 24, 24,104,  9,000,000,000,000,000,000,  9,112, 24, 24,122, 24, 24, 24, 24, 24, 24], # 17
            [ 11, 11, 11, 11, 11,  3, 98,  1,  3, 96,  9,000,000,000,000,000,000,  9, 96,  1,  3, 98,  1, 11, 11, 11, 11, 11], # 18
            [000,000,000,000,000,  9, 98,  9,  9, 96,  7, 11, 11, 11, 11, 11, 11,  5, 96,  9,  9, 98,  9,000,000,000,000,000], # 19
            [000,000,000,000,000,  9, 98,  9,  9,112, 24, 24, 24, 24, 24, 24, 24, 24,104,  9,  9, 98,  9,000,000,000,000,000], # 20
            [000,000,000,000,000,  9, 98,  9,  9, 96,  1, 11, 11, 11, 11, 11, 11,  3, 96,  9,  9, 98,  9,000,000,000,000,000], # 21
            [  1, 11, 11, 11, 11,  5, 98,  7,  5, 96,  7, 11, 11,  3,  1, 11, 11,  5, 96,  7,  5, 98,  7, 11, 11, 11, 11,  3], # 22
            [  9, 82, 26, 26, 26, 26,122, 26, 26, 58, 26, 26, 74,  9,  9, 82, 26, 26, 58, 26, 26,122, 26, 26, 26, 26, 74,  9], # 23
            [  9, 98,  1, 11, 11,  3, 98,  1, 11, 11, 11,  3, 98,  9,  9, 98,  1, 11, 11, 11,  3, 98,  1, 11, 11,  3, 98,  9], # 24
            [  9, 98,  7, 11,  3,  9, 98,  7, 11, 11, 11,  5, 98,  7,  5, 98,  7, 11, 11, 11,  5, 98,  9,  1, 11,  5, 98,  9], # 25
            [  9, 54, 26, 74,  9,  9,114, 26, 26, 90, 26, 26, 58, 26, 26, 58, 26, 26, 90, 26, 26,106,  9,  9, 82, 26, 46,  9], # 26
            [  7, 11,  3, 98,  9,  9, 98,  1,  3, 98,  1, 11, 11, 11, 11, 11, 11,  3, 98,  1,  3, 98,  9,  9, 98,  1, 11,  5], # 27
            [  1, 11,  5, 98,  7,  5, 98,  9,  9, 98,  7, 11, 11,  3,  1, 11, 11,  5, 98,  9,  9, 98,  7,  5, 98,  7, 11,  3], # 28
            [  9, 82, 26, 58, 26, 26, 42,  9,  9, 50, 26, 26, 74,  9,  9, 82, 26, 26, 42,  9,  9, 50, 26, 26, 58, 26, 74,  9], # 29
            [  9, 98,  1, 11, 11, 11, 11,  5,  7, 11, 11,  3, 98,  9,  9, 98,  1, 11, 11,  5,  7, 11, 11, 11, 11,  3, 98,  9], # 30
            [  9, 98,  7, 11, 11, 11, 11, 11, 11, 11, 11,  5, 98,  7,  5, 98,  7, 11, 11, 11, 11, 11, 11, 11, 11,  5, 98,  9], # 31
            [  9, 50, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 58, 26, 26, 58, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 42,  9], # 32
            [  7, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,  5], # 33

            [000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000], # 34
            [000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000], # 35
        ]

    @property
    def pellet_count(self):

        ''' The number of pellets still in the grid '''

        count = 0

        for line in self.grid:

            for tile in line:

                if tile & globals.WALL:
                    continue

                tile >>= 1

                if tile & globals.PELLET:
                    count += 1

        return count

    def draw_grid(self, screen):

        y = 0

        for line in self.grid:

            x = 0

            for tile in line:

                if tile & globals.WALL:

                    screen.blit(self.walls[tile >> 1], (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE))

                elif tile & (globals.PELLET << 1):

                    if tile & (globals.SPELLET << 1):

                        screen.blit(self.pellets[1], (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE))

                    else:

                        screen.blit(self.pellets[0], (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE))

                x += 1

            y += 1
